# =============================================
# 1. CONFIGURACIÓN DE LA BASE DE DATOS (H2)
# =============================================
# Habilita la consola web de H2, accesible en http://localhost:8080/h2-console
spring.h2.console.enabled=true
# Ruta de la consola web
spring.h2.console.path=/h2-console

# Configuración de la conexión a la base de datos en memoria llamada 'userdb'
spring.datasource.url=jdbc:h2:mem:userdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
# Puedes dejar la contraseña en blanco o usar una simple para desarrollo
spring.datasource.password=password


# =============================================
# 2. CONFIGURACIÓN DE JPA / HIBERNATE
# =============================================
# Especifica el "dialecto" SQL que Hibernate debe usar para H2
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Estrategia de generación del esquema de la BD. 'update' modifica el esquema si las entidades cambian.
# Muy útil para desarrollo. Para producción, se usaría 'validate' o 'none'.
spring.jpa.hibernate.ddl-auto=update

# Muestra en la consola las consultas SQL que Hibernate ejecuta. ¡Indispensable para depurar!
spring.jpa.show-sql=true

# Formatea el SQL mostrado en la consola para que sea más legible
spring.jpa.properties.hibernate.format_sql=true


# =============================================
# 3. PROPIEDAD PERSONALIZADA DE VALIDACIÓN
# =============================================
# Expresión regular para la validación de contraseñas, inyectada en UserRequestDTO.
# Este ejemplo exige: 1 mayúscula, 1 minúscula, 1 número, 1 caracter especial y de 8 a 15 caracteres de longitud.
validation.password.regex=^(?=.*[A-Z])(?=.*[a-z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,15}$


# =============================================
# 4. CONFIGURACIÓN DE LOGGING (OPCIONAL PERO RECOMENDADO)
# =============================================
# Cambia el nivel de log para nuestro paquete a DEBUG.
# Esto nos permitirá ver los mensajes de log.debug() que pusimos en los mappers del servicio.
logging.level.com.challenge.userapi=DEBUG

# (Opcional) Muestra los parámetros que se enlazan a las consultas SQL de Hibernate.
# Muy potente para ver exactamente con qué valores se ejecutan las queries.
# logging.level.org.hibernate.type.descriptor.sql=TRACE